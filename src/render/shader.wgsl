struct VertexOutput {
    @builtin(position) clip_position: vec4<f32>,
    @location(0) color: vec3<f32>,
}

struct VertexInput {
    // @location(0) position: vec3<f32>,
    @location(0) position: u32,
    @location(1) blockv: u32,
}

struct PushConstants {
    chunk_coordinates: vec3<i32>,
}

var<push_constant> pc: PushConstants;

struct CameraUniform {
    view_proj: mat4x4<f32>,
};
@group(0) @binding(0) var<uniform> camera: CameraUniform;

@vertex
fn vs_main(in: VertexInput) -> VertexOutput {
    var COLOR_MAP = array<vec3<f32>, 256>(
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.490196, 0.490196, 0.490196), // stone
        vec3<f32>(0.184000, 0.525000, 0.161000), // grass
        vec3<f32>(0.525490, 0.376471, 0.262745), // dirt
        vec3<f32>(0.482353, 0.482353, 0.482353), // cobblestone
        vec3<f32>(0.615686, 0.498039, 0.309804), // wood_planks
        vec3<f32>(0.286275, 0.392157, 0.145098), // sapling
        vec3<f32>(0.329412, 0.329412, 0.329412), // bedrock
        vec3<f32>(0.184314, 0.258824, 0.952941), // flowing_water
        vec3<f32>(0.184314, 0.258824, 0.952941), // water
        vec3<f32>(0.831373, 0.349020, 0.070588), // flowing_lava
        vec3<f32>(0.831373, 0.349020, 0.070588), // lava
        vec3<f32>(0.858824, 0.827451, 0.627451), // sand
        vec3<f32>(0.498039, 0.486275, 0.478431), // gravel
        vec3<f32>(0.576471, 0.560784, 0.490196), // gold_ore
        vec3<f32>(0.541176, 0.513725, 0.498039), // iron_ore
        vec3<f32>(0.447059, 0.447059, 0.447059), // coal_ore
        vec3<f32>(0.631373, 0.509804, 0.313725), // log
        vec3<f32>(0.184000, 0.525000, 0.161000), // leaves
        vec3<f32>(0.709804, 0.709804, 0.219608), // sponge
        vec3<f32>(0.847059, 0.949020, 0.964706), // glass
        vec3<f32>(0.388235, 0.431373, 0.533333), // lapis_ore
        vec3<f32>(0.149020, 0.262745, 0.541176), // lapis_block
        vec3<f32>(0.341176, 0.341176, 0.341176), // dispenser
        vec3<f32>(0.831373, 0.803922, 0.580392), // sandstone
        vec3<f32>(0.407843, 0.270588, 0.200000), // noteblock
        vec3<f32>(0.560784, 0.090196, 0.094118), // bed
        vec3<f32>(0.505882, 0.403922, 0.258824), // golden_rail
        vec3<f32>(0.466667, 0.380392, 0.341176), // detector_rail
        vec3<f32>(0.400000, 0.400000, 0.400000), // sticky_piston
        vec3<f32>(0.866667, 0.866667, 0.866667), // web
        vec3<f32>(0.184000, 0.525000, 0.161000), // tallgrass
        vec3<f32>(0.478431, 0.309804, 0.098039), // deadbush
        vec3<f32>(0.400000, 0.400000, 0.400000), // piston
        vec3<f32>(0.596078, 0.498039, 0.337255), // piston_head
        vec3<f32>(0.870588, 0.870588, 0.870588), // wool
        vec3<f32>(0.400000, 0.400000, 0.400000), // piston_extension
        vec3<f32>(0.486275, 0.666667, 0.000000), // yellow_flower
        vec3<f32>(0.423529, 0.188235, 0.019608), // red_flower
        vec3<f32>(0.564706, 0.431373, 0.333333), // brown_mushroom
        vec3<f32>(0.760784, 0.207843, 0.207843), // red_mushroom
        vec3<f32>(0.980392, 0.941176, 0.313725), // gold_block
        vec3<f32>(0.870588, 0.870588, 0.870588), // iron_block
        vec3<f32>(0.635294, 0.635294, 0.635294), // double_stone_slab
        vec3<f32>(0.635294, 0.635294, 0.635294), // stone_slab
        vec3<f32>(0.576471, 0.392157, 0.341176), // brick_block
        vec3<f32>(0.666667, 0.301961, 0.203922), // tnt
        vec3<f32>(0.615686, 0.498039, 0.309804), // bookshelf
        vec3<f32>(0.400000, 0.474510, 0.400000), // mossy_cobblestone
        vec3<f32>(0.078431, 0.074510, 0.117647), // obsidian
        vec3<f32>(0.517647, 0.443137, 0.258824), // torch
        vec3<f32>(0.827451, 0.541176, 0.203922), // fire
        vec3<f32>(0.101961, 0.152941, 0.192157), // mob_spawner
        vec3<f32>(0.615686, 0.498039, 0.309804), // oak_stairs
        vec3<f32>(0.403922, 0.294118, 0.129412), // chest
        vec3<f32>(0.941176, 0.941176, 0.941176), // redstone_wire
        vec3<f32>(0.513725, 0.560784, 0.576471), // diamond_ore
        vec3<f32>(0.423529, 0.870588, 0.850980), // diamond_block
        vec3<f32>(0.454902, 0.376471, 0.254902), // crafting_table
        vec3<f32>(0.000000, 0.800000, 0.000000), // wheat
        vec3<f32>(0.525490, 0.376471, 0.262745), // farmland
        vec3<f32>(0.400000, 0.400000, 0.400000), // furnace
        vec3<f32>(0.400000, 0.400000, 0.400000), // lit_furnace
        vec3<f32>(0.588235, 0.478431, 0.294118), // standing_sign
        vec3<f32>(0.529412, 0.400000, 0.196078), // wooden_door
        vec3<f32>(0.474510, 0.376471, 0.203922), // ladder
        vec3<f32>(0.466667, 0.419608, 0.329412), // rail
        vec3<f32>(0.482353, 0.482353, 0.482353), // stone_stairs
        vec3<f32>(0.588235, 0.478431, 0.294118), // wall_sign
        vec3<f32>(0.482353, 0.482353, 0.482353), // lever
        vec3<f32>(0.490196, 0.490196, 0.490196), // stone_pressure_plate
        vec3<f32>(0.643137, 0.643137, 0.643137), // iron_door
        vec3<f32>(0.615686, 0.498039, 0.309804), // wooden_pressure_plate
        vec3<f32>(0.525490, 0.407843, 0.407843), // redstone_ore
        vec3<f32>(0.525490, 0.407843, 0.407843), // lit_redstone_ore
        vec3<f32>(0.368627, 0.219608, 0.145098), // unlit_redstone_torch
        vec3<f32>(0.694118, 0.301961, 0.164706), // redstone_torch
        vec3<f32>(0.490196, 0.490196, 0.490196), // stone_button
        vec3<f32>(0.941176, 0.984314, 0.984314), // snow_layer
        vec3<f32>(0.494118, 0.678431, 1.000000), // ice
        vec3<f32>(0.941176, 0.984314, 0.984314), // snow
        vec3<f32>(0.050980, 0.400000, 0.094118), // cactus
        vec3<f32>(0.623529, 0.647059, 0.694118), // clay
        vec3<f32>(0.580392, 0.756863, 0.396078), // reeds
        vec3<f32>(0.427451, 0.290196, 0.215686), // jukebox
        vec3<f32>(0.615686, 0.498039, 0.309804), // fence
        vec3<f32>(0.749020, 0.462745, 0.082353), // pumpkin
        vec3<f32>(0.435294, 0.211765, 0.203922), // netherrack
        vec3<f32>(0.329412, 0.250980, 0.200000), // soul_sand
        vec3<f32>(0.564706, 0.462745, 0.274510), // glowstone
        vec3<f32>(0.349020, 0.047059, 0.756863), // portal
        vec3<f32>(0.749020, 0.462745, 0.082353), // lit_pumpkin
        vec3<f32>(0.756863, 0.600000, 0.505882), // cake
        vec3<f32>(0.588235, 0.564706, 0.564706), // unpowered_repeater
        vec3<f32>(0.643137, 0.564706, 0.564706), // powered_repeater
        vec3<f32>(1.000000, 1.000000, 1.000000), // stained_glass
        vec3<f32>(0.505882, 0.376471, 0.184314), // trapdoor
        vec3<f32>(0.050980, 0.035294, 0.062745), // monster_egg
        vec3<f32>(0.478431, 0.478431, 0.478431), // stonebrick
        vec3<f32>(0.796078, 0.670588, 0.474510), // brown_mushroom_block
        vec3<f32>(0.796078, 0.670588, 0.474510), // red_mushroom_block
        vec3<f32>(0.431373, 0.423529, 0.415686), // iron_bars
        vec3<f32>(0.827451, 0.949020, 0.949020), // glass_pane
        vec3<f32>(0.580392, 0.592157, 0.141176), // melon_block
        vec3<f32>(0.592157, 0.592157, 0.592157), // pumpkin_stem
        vec3<f32>(0.592157, 0.592157, 0.592157), // melon_stem
        vec3<f32>(0.435294, 0.435294, 0.435294), // vine
        vec3<f32>(0.615686, 0.498039, 0.309804), // fence_gate
        vec3<f32>(0.576471, 0.392157, 0.341176), // brick_stairs
        vec3<f32>(0.478431, 0.478431, 0.478431), // stone_brick_stairs
        vec3<f32>(0.525490, 0.376471, 0.262745), // mycelium
        vec3<f32>(0.470588, 0.470588, 0.470588), // waterlily
        vec3<f32>(0.176471, 0.086275, 0.101961), // nether_brick
        vec3<f32>(0.176471, 0.086275, 0.101961), // nether_brick_fence
        vec3<f32>(0.176471, 0.086275, 0.101961), // nether_brick_stairs
        vec3<f32>(0.411765, 0.070588, 0.121569), // nether_wart
        vec3<f32>(0.074510, 0.066667, 0.109804), // enchanting_table
        vec3<f32>(0.490196, 0.411765, 0.317647), // brewing_stand
        vec3<f32>(0.247059, 0.247059, 0.247059), // cauldron
        vec3<f32>(0.349020, 0.047059, 0.756863), // end_portal
        vec3<f32>(0.556863, 0.607843, 0.466667), // end_portal_frame
        vec3<f32>(0.866667, 0.878431, 0.647059), // end_stone
        vec3<f32>(0.050980, 0.035294, 0.062745), // dragon_egg
        vec3<f32>(0.298039, 0.184314, 0.113725), // redstone_lamp
        vec3<f32>(0.498039, 0.372549, 0.231373), // lit_redstone_lamp
        vec3<f32>(0.615686, 0.498039, 0.309804), // double_wooden_slab
        vec3<f32>(0.615686, 0.498039, 0.309804), // wooden_slab
        vec3<f32>(0.549020, 0.549020, 0.247059), // cocoa
        vec3<f32>(0.831373, 0.803922, 0.580392), // sandstone_stairs
        vec3<f32>(0.423529, 0.509804, 0.450980), // emerald_ore
        vec3<f32>(0.082353, 0.121569, 0.129412), // ender_chest
        vec3<f32>(0.615686, 0.498039, 0.309804), // tripwire_hook
        vec3<f32>(0.568627, 0.568627, 0.568627), // tripwire
        vec3<f32>(0.317647, 0.854902, 0.462745), // emerald_block
        vec3<f32>(0.407843, 0.305882, 0.184314), // spruce_stairs
        vec3<f32>(0.768627, 0.701961, 0.482353), // birch_stairs
        vec3<f32>(0.603922, 0.431373, 0.301961), // jungle_stairs
        vec3<f32>(0.701961, 0.556863, 0.466667), // command_block
        vec3<f32>(0.847059, 0.949020, 0.964706), // beacon
        vec3<f32>(0.482353, 0.482353, 0.482353), // cobblestone_wall
        vec3<f32>(0.474510, 0.250980, 0.200000), // flower_pot
        vec3<f32>(0.000000, 0.623529, 0.121569), // carrots
        vec3<f32>(0.000000, 0.623529, 0.121569), // potatoes
        vec3<f32>(0.615686, 0.498039, 0.309804), // wooden_button
        vec3<f32>(0.580392, 0.580392, 0.580392), // skull
        vec3<f32>(0.254902, 0.254902, 0.254902), // anvil
        vec3<f32>(0.403922, 0.294118, 0.129412), // trapped_chest
        vec3<f32>(0.980392, 0.941176, 0.313725), // light_weighted_pressure_plate
        vec3<f32>(0.870588, 0.870588, 0.870588), // heavy_weighted_pressure_plate
        vec3<f32>(0.623529, 0.600000, 0.592157), // unpowered_comparator
        vec3<f32>(0.623529, 0.600000, 0.592157), // powered_comparator
        vec3<f32>(0.529412, 0.474510, 0.388235), // daylight_detector
        vec3<f32>(0.635294, 0.101961, 0.035294), // redstone_block
        vec3<f32>(0.501961, 0.349020, 0.329412), // quartz_ore
        vec3<f32>(0.250980, 0.250980, 0.250980), // hopper
        vec3<f32>(0.909804, 0.894118, 0.862745), // quartz_block
        vec3<f32>(0.909804, 0.894118, 0.862745), // quartz_stairs
        vec3<f32>(0.400000, 0.301961, 0.250980), // activator_rail
        vec3<f32>(0.345098, 0.345098, 0.345098), // dropper
        vec3<f32>(0.823529, 0.698039, 0.631373), // stained_hardened_clay
        vec3<f32>(0.972549, 0.972549, 0.972549), // stained_glass_pane
        vec3<f32>(0.525490, 0.525490, 0.525490), // leaves2
        vec3<f32>(0.623529, 0.360784, 0.247059), // log2
        vec3<f32>(0.662745, 0.360784, 0.200000), // acacia_stairs
        vec3<f32>(0.239216, 0.152941, 0.070588), // dark_oak_stairs
        vec3<f32>(0.380392, 0.643137, 0.313725), // slime
        vec3<f32>(0.560784, 0.090196, 0.094118), // barrier
        vec3<f32>(0.733333, 0.733333, 0.733333), // iron_trapdoor
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.662745, 0.549020, 0.062745), // hay_block
        vec3<f32>(0.870588, 0.870588, 0.870588), // carpet
        vec3<f32>(0.592157, 0.364706, 0.262745), // hardened_clay
        vec3<f32>(0.074510, 0.074510, 0.074510), // coal_block
        vec3<f32>(0.643137, 0.756863, 0.956863), // packed_ice
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
        vec3<f32>(0.000000, 0.000000, 0.000000), // 
    );

    let vertex_position = vec3<f32>(
        f32((in.position >> 0u) & 0x1fu),
        f32((in.position >> 5u) & 0x1fu),
        f32((in.position >> 10u) & 0x1fu),
    );

    var out: VertexOutput;
    let chunk_coords = vec3<f32>(f32(pc.chunk_coordinates.x * 16), f32(pc.chunk_coordinates.y * 16), f32(pc.chunk_coordinates.z * 16));
    out.clip_position = camera.view_proj * vec4<f32>(vertex_position.xyz + chunk_coords, 1.0);
    let colormap_offset = in.blockv & 0xffu;

    out.color = COLOR_MAP[colormap_offset];
    
    // (0  , 1    , 2    , 3     , 4     , 5    )
    // (nup, ndown, nleft, nright, nfront, nback)
    // up, front and right should be lighter? 
    let side = (in.blockv >> 8u) & 0x7u;
    // let side = f32((blockv >> 8u) & 0x7u) / 5.0;
    // // out.color *= side;

    if side == 1u { out.color *= 0.3; }
    if side == 2u { out.color *= 0.7; }
    if side == 3u { out.color *= 0.8; }
    if side == 5u { out.color *= 0.5; }

    // 0-3, higher values are lightest
    // ! debug color, game lags with the shitty color table
    out.color = vec3<f32>(1.0, 1.0, 1.0);

    let ao = (in.blockv >> 12u) & 0x3u;
    // out.color *= 0.5 + (0.17 * f32(ao));
    // if ao != 3u {
    //     out.color *= 0.7;
    // }

    let ao_mul = max(0.0, min(1.0 - f32(3u - ao) * 0.15f, 1f));
    out.color *= ao_mul;
    // out.color += vec3<f32>(f32(3u - ao) * 0.35, 0.0, 0.0);

    // out.color = COLOR_MAP[in_vertex_index+u32(3)];
    return out;
}

@fragment
fn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {
    return vec4<f32>(in.color, 1.0);
}